getgenv().bubble = false;
getgenv().sell = false;
getgenv().buyEgg = false;
getgenv().autoCoin = false;


local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/AikaV3rm/UiLib/master/Lib.lua')))()


local plr = game.Players.LocalPlayer

function autoBubble()
    spawn(function()
        while wait() do
            if not bubble then break
        end
            local args = {[1] = "BlowBubble"}
            game:GetService("ReplicatedStorage").NetworkRemoteEvent:FireServer(unpack(args));
        end
    end)
end

autoBubble()

function CoinCollect()
    spawn(function()
       while wait() do
           if not autoCoin then break
       end
            local Pickups = game:GetService("Workspace").Pickups
            local plr = game.Players.LocalPlayer
            function GetCoin()
            local Closest = nil
            local ClosestMag = nil
            local ClosestPart = nil
            for i,v in pairs(Pickups:GetChildren()) do
            if v.Name == "Part" and v:FindFirstChild("TouchInterest") then
            --print("LOL")
            if (v.Position - plr.Character.HumanoidRootPart.Position).Magnitude < 1000 then
            if not Closest then
                Closest = v.CFrame
                ClosestPart = v
                ClosestMag = (v.Position - plr.Character.HumanoidRootPart.Position).Magnitude
            elseif (v.Position - plr.Character.HumanoidRootPart.Position).Magnitude < ClosestMag then
                Closest = v.CFrame
                ClosestPart = v
                ClosestMag = (v.Position - plr.Character.HumanoidRootPart.Position).Magnitude
                end
           end
       end
    end
   
           game:GetService("TweenService"):Create(plr.Character.HumanoidRootPart, TweenInfo.new(1, Enum.EasingStyle.Linear), {CFrame = Closest}):Play()
           end
           while autoCoin do
            if autoCoin == false then
                break
            end
           print("ok")
           wait(1)
           GetCoin()
       end
    end
   end)
end

function autoSell()
    spawn(function()
        while wait() do
            if not sell then break
        end
            local plr = game.Players.LocalPlayer
            local args = {[1] = "SellBubble",[2] = "Sell"}
            game:GetService("ReplicatedStorage").NetworkRemoteEvent:FireServer(unpack(args));

            game:GetService("TweenService"):Create(plr.Character.HumanoidRootPart, TweenInfo.new(1, Enum.EasingStyle.Linear),{CFrame =game:GetService("Workspace").GumMachine.BubbleGumMachine.BubbleGumBase.CFrame}):Play()
        end
    end)
end

autoSell()



function autoEgg(eggType)
    spawn(function()
        while wait() do
            if not buyEgg then break
        end
            game:GetService("ReplicatedStorage").NetworkRemoteEvent:FireServer("PurchaseEgg", eggType) 
        end
    end)
end

autoEgg("Common Egg", "5")

function teleport(Island)
    if game:GetService("Workspace").FloatingIslands.Overworld:FindFirstChild(Island) then
        local tl = (game:GetService("Workspace").FloatingIslands.Overworld[Island].TeleportPoint.CFrame)
        local ts = game:GetService("TweenService"):Create(plr.Character.HumanoidRootPart, TweenInfo.new(1, Enum.EasingStyle.Linear),{CFrame = tl})
        
    end
end



local w = library:CreateWindow("Bubble Gum Sim") -- Creates the window

local b = w:CreateFolder("Farming") -- Creates the folder(U will put here your buttons,etc)

local c = w:CreateFolder("Egg")

local d = w:CreateFolder("Teleports")

b:DestroyGui()

b:Toggle("AutoFarm",function(bool)
    getgenv().bubble = bool
    print('AutoFarm is: ', bool)
    if bool then
        autoBubble();
    end
end)

b:Toggle("AutoSell",function(bool)
    getgenv().sell = bool
    print('AutoSell is: ', bool)
    if bool then
        autoSell();
    end
end)

b:Toggle("AutoCoin",function(bool)
    getgenv().autoCoin = bool
    print('AutoCoin is: ', bool)
    if bool then
        CoinCollect();
    end
end)



c:Toggle("AutoEgg",function(bool)
    getgenv().buyEgg = bool
    print('AutoEgg is: ', bool)
    if bool then
        autoEgg("Common Egg");
    end
end)

local selectedWorld;
d:Dropdown("Islands",{"The Floating Island","Space","The Twilight","The Skylands", "The Void","Zen","XP Island"},true,function(value)
    selectedWorld = value
    print(value)
end)
d:Button("Teleport Selected",function()
    if selectedWorld then
        teleporter(selectedWorld)
    end
end)


-- b:Label("Pretty Useless NGL",{
--     TextSize = 25; -- Self Explaining
--     TextColor = Color3.fromRGB(255,255,255); -- Self Explaining
--     BgColor = Color3.fromRGB(69,69,69); -- Self Explaining
    
-- }) 

-- b:Button("Button",function()
--     print("Elym Winning")
-- end)

-- b:Toggle("Toggle",function(bool)
--     shared.toggle = bool
--     print(shared.toggle)
-- end)

-- b:Slider("Slider",{
--     min = 10; -- min value of the slider
--     max = 50; -- max value of the slider
--     precise = true; -- max 2 decimals
-- },function(value)
--     print(value)
-- end)

-- b:Dropdown("Dropdown",{"A","B","C"},true,function(mob) --true/false, replaces the current title "Dropdown" with the option that t
--     print(mob)
-- end)

-- b:Bind("Bind",Enum.KeyCode.C,function() --Default bind
--     print("Yes")
-- end)

-- b:ColorPicker("ColorPicker",Color3.fromRGB(255,0,0),function(color) --Default color
--     print(color)
-- end)

-- b:Box("Box","number",function(value) -- "number" or "string"
--     print(value)
-- end)
